# Antoni's bashrc

# ----- Bash History ----- #
# Append history instead of overwriting
shopt -s histappend
# Append to history immediately
export PROMP_COMMAND='history -a'
# Add time to command history
export HISTTIMEFORMAT="[%F %T] "
# Ignore spaces for sensitive commands and ignore duplicates
export HISTCONTROL=ignoreboth
# Ignore the following commands
export HISTIGNORE="clean:history:date:* --help"
# Control size of history file
export HISTSIZE=2000
export HISTFILESIZE=5000

# Environment Variables
export VISUAL=vim
export EDITOR="$VISUAL"

# Color variables
RED='\[\e[01;31m\]'
GREEN='\[\e[01;32m\]'
YELLOW='\[\e[01;33m\]'
BLUE='\[\e[01;34m\]'
CYAN='\[\e[1;36m\]'
NC='\[\e[0m\]'

# If there is an aliases file, source it
if [[ -f "$DOTFILES/bash/bash_aliases" ]]; then
    source "$DOTFILES/bash/bash_aliases"
fi

# ----- Prompt ----- #
# PS1
export PS1="${RED}\$(exit_code_prompt)${NC}${CYAN}\u${NC}@${GREEN}\h${NC}: \w${YELLOW}\$(git_branch_or_tag)${NC}\n\$ "

# ----- Functions ----- #

# Git Repo Information
function git_branch_or_tag() {
    local name
    name="$(git symbolic-ref --short HEAD 2> /dev/null || git describe --tags --exact-match 2> /dev/null )"
    echo "${name}" | sed -e 's/\(.*\)/ (\1)/'
}

# Add error code to prompt when command fails
#
# Check the exit status from the last run and then add to the prompt
# if the last return code was non-zero
#
# RETURNS:
#   A red x with exit code if failure or nothig on success
function exit_code_prompt(){
    local exit_code=$?
    if [[ ${exit_code} -ne 0 ]]; then
        echo "(x: ${exit_code})"
    fi
}

# Create a new shell script
function newx() {
    local name=$1
    echo -e "#!/bin/bash\n\n" > "${name}.sh"
    chmod +x "${name}.sh"
}


export NVM_DIR="$HOME/.config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Source Rust Cargo environment variables
if [[ -f $HOME/.cargo/env ]]; then
    source "$HOME/.cargo/env"
fi
